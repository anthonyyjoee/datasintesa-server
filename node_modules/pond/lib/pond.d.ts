/// <reference types="node" />
import { Writable, Readable, WritableOptions } from 'stream';
declare type ICallback = (err?: Error | null, buffer?: Buffer) => void;
export default function pond(source?: Readable | null, callback?: ICallback | null, options?: WritableOptions): Pond;
declare class Pond extends Writable {
    private _buffers;
    private _usePromise;
    private _promise;
    private _callback?;
    private _onspooned?;
    constructor(source: Readable | null, callback: ICallback | null, options?: WritableOptions);
    _write(chunk: Buffer, encoding: string, callback: (error?: Error | null) => void): void;
    spoon(): Promise<Buffer>;
    spoon(handler: (buffer: Buffer) => void): void;
}
export {};
